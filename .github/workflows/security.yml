name: Security Scan

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '0 6 * * 1'  # Weekly on Monday at 6 AM

jobs:
  security-scan:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install security tools
      run: |
        python -m pip install --upgrade pip
        pip install bandit safety semgrep
    
    - name: Run Bandit security scan
      run: |
        bandit -r . -x tests/ --skip B101 --severity-level medium -f json -o bandit-results.json || true
        bandit -r . -x tests/ --skip B101 --severity-level medium -f txt -o bandit-results.txt || true
    
    - name: Run Safety check
      run: |
        safety check --json --output safety-results.json || true
        safety check --output safety-results.txt || true
    
    - name: Run Semgrep security scan
      run: |
        semgrep --config=auto --json --output=semgrep-results.json . || true
        semgrep --config=auto --output=semgrep-results.txt . || true
    
    - name: Upload security scan results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: security-scan-results
        path: |
          bandit-results.*
          safety-results.*
          semgrep-results.*
    
    - name: Check for critical vulnerabilities
      run: |
        echo "=== Security Scan Summary ==="
        echo "Bandit Results:"
        if [ -f bandit-results.txt ]; then
          cat bandit-results.txt | tail -n 10
        fi
        echo ""
        echo "Safety Results:"
        if [ -f safety-results.txt ]; then
          cat safety-results.txt | tail -n 10
        fi
        echo ""
        echo "Semgrep Results:"
        if [ -f semgrep-results.txt ]; then
          cat semgrep-results.txt | tail -n 10
        fi

  docker-security-scan:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Build Docker image for scanning
      run: |
        docker build -t utdrs-api-gateway:scan .
    
    - name: Run Trivy vulnerability scanner on Docker image
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: 'utdrs-api-gateway:scan'
        format: 'table'
        output: 'trivy-docker-results.txt'
    
    - name: Run Trivy filesystem scan
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'table'
        output: 'trivy-fs-results.txt'
    
    - name: Upload Trivy scan results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: trivy-scan-results
        path: |
          trivy-*.txt
    
    - name: Display security scan summary
      if: always()
      run: |
        echo "=== Docker Security Scan Summary ==="
        if [ -f trivy-docker-results.txt ]; then
          echo "Docker Image Vulnerabilities:"
          cat trivy-docker-results.txt | tail -n 20
        fi
        echo ""
        if [ -f trivy-fs-results.txt ]; then
          echo "Filesystem Vulnerabilities:"
          cat trivy-fs-results.txt | tail -n 20
        fi
